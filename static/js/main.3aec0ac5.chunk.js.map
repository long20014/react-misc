{"version":3,"sources":["utils/constants.js","utils/getIsLoggedIn.js","router/guards/requireLogin.js","services/history.service.js","components/nav/nav.jsx","actions/auth-action.js","actions/type.js","pages/puzzle-page/puzzle-piece/puzzle-piece.jsx","pages/puzzle-page/puzzle-grid-slot/puzzle-grid-slot.jsx","pages/puzzle-page/puzzle-swap-count/puzzle-swap-count.jsx","components/timer/timer.jsx","shared/constants.js","services/grid.service.js","pages/puzzle-page/puzzle-grid/puzzle-grid.jsx","actions/puzzle-action.js","pages/puzzle-page/puzzle-menu/puzzle-menu.jsx","pages/puzzle-page/puzzle-setting/puzzle-setting.jsx","pages/puzzle-page/puzzle-score-board/puzzle-score-board.jsx","pages/puzzle-page/puzzle-page.jsx","pages/puzzle-page/puzzle-page-route.js","pages/home-page/home-page.jsx","pages/home-page/home-page-route.js","pages/clock-page/clock/clock.jsx","pages/clock-page/clock-page.jsx","pages/clock-page/clock-page-route.js","pages/login-page/login-page.jsx","pages/login-page/login-page-route.js","services/api-caller.service.js","actions/card-action.js","services/card.service.js","pages/card-page/card-piece/card-piece.jsx","pages/card-page/card-grid-slot/card-grid-slot.jsx","pages/card-page/counter/counter.jsx","services/card-grid.service.js","pages/card-page/card-grid/card-grid.jsx","pages/card-page/card-menu/card-menu.jsx","pages/card-page/card-setting/card-setting.jsx","pages/card-page/card-score-board/card-score-board.jsx","pages/card-page/card-page.jsx","pages/card-page/card-page-route.js","actions/component-generator-action.js","pages/component-generator-page/setting-area/setting-area.jsx","pages/component-generator-page/components/button/button.jsx","pages/component-generator-page/display-area/display-area.jsx","pages/component-generator-page/code-area/code-area.jsx","pages/component-generator-page/component-generator-page.jsx","pages/component-generator-page/component-generator-page-route.js","router/main-router.js","reducers/auth-reducer.js","reducers/puzzle-reducer.js","reducers/card-reducer.js","reducers/component-generator-reducer.js","pages/component-generator-page/constants.js","reducers/index.js","store/store.js","App.jsx","serviceWorker.js","index.js"],"names":["STORAGE_KEYS","Object","freeze","IS_LOGGED_IN","getIsLoggedIn","localStorage","getItem","requireLogin","to","from","next","meta","redirect","createBrowserHistory","Nav","props","logout","bind","this","logoutAction","history","push","isLoggedIn","className","onClick","style","color","React","Component","propsType","PropTypes","func","isRequired","compose","withRouter","connect","state","auth","dispatch","removeItem","type","PuzzlePiece","id","draggable","PuzzleGridSlot","pieceId","key","createPuzzlePiece","PuzzleSwapCount","_isMounted","_stopSubscribe","subscribeCount","updateCount","count","setState","subscribeTimer","swapChanceCount","startSubscribe","setInterval","setTimeout","Timer","_isStopped","subscribeStop","updateStop","stop","stopTimer","emitTime","time","isOn","start","startTimer","resetTimer","upTimingFunc","Date","now","timer","clearInterval","upTimer","Math","floor","constants","GRID_SIZE_LV1","height","width","GRID_SIZE_LV2","config","CARD_API_URL","getIdNumber","item","split","getIdNumbers","items","ids","forEach","getPieceIdSet","gridSize","emptySlotQuantity","pieceIdSet","i","getRandomPieceId","splicePos","random","length","splice","findEmptySlots","slots","emptySlots","slot","hasChildNodes","coloringEmptySlots","emptySlot","backgroundColor","transformSlots","arraySize","transformedSlots","emptySlotIds","slotId","draggableChecked","includes","isAdjacent","firstElementChild","comparedSlot","comparedSlotId","swapPieces","slot1","slot2","slot1Copy","cloneNode","slot2Copy","replaceChild","childNodes","appendChild","GridService","gridService","gridSlotSize","window","innerWidth","HorizontalGaps","VerticalGaps","gridStyle","gridTemplateColumns","gridTemplateRows","gridGap","border","PuzzleGrid","emptySlotBg","slotBg","hoveredSlotBg","isWin","subscribeWinning","callback","getEmittedTime","emittedTime","console","log","winningInfo","playedTime","playerName","level","gameLevel","setWinningInfo","announceWinning","getSwapChanceCount","gameSettings","nextProps","nextState","isUpdated","initDraggingEnvironment","restartGame","emptySlotId","createEmptySlotIds","gridSlots","Array","document","querySelectorAll","puzzlePieces","draggedItem","originalSlot","piece","addEventListener","parentElement","display","slotOriginalColor","e","preventDefault","draggedSlot","parentNode","draggedSlotId","append","checkWiningCondition","swapSuccess","winningCount","child","childId","broadcastWinning","alert","createGridSlots","map","puzzle","info","PuzzleMenu","PuzzleSetting","change","event","changeGameLevel","target","value","htmlFor","marginRight","name","onChange","PuzzleScoreBoard","sortedWinningInfo","sort","info1","info2","index","indexOf","PuzzlePage","path","exact","component","puzzleScoreBoard","PuzzlePageRoute","HomePage","HomePageRoute","AUTH_ONLY","Clock","hour","minute","second","transform","ClockPage","clock","getHours","getMinutes","getSeconds","ClockPageRoute","LoginPage","login","loginAction","setItem","LoginPageRoute","callApi","apiUrl","endpoint","a","method","body","axios","url","data","catch","error","increaseCount","amount","cardService","updateWinningInfo","post","then","res","getWinningInfo","CardPiece","flipCardUp","shiftArrayByCase","shiftArrayNightmare","openedPair","getElementsByClassName","getAttribute","card1","card2","classList","remove","add","number","arr","steps","concat","unmatchedSlots","children","firstChild","contains","shiftCase","removeChild","shiftArrayToLeft","shiftArrayToRight","toggle","moveCount","toggleShiftMode","cardPiece","querySelector","isWaiting","increaseMoveCount","isEven","isPairMatching","resetUnsuccessfulMoveCount","alterMatchedPairCount","matchedPairs","disableFlip","moves","increaseUnsuccessfulMoveCount","unsuccessfulMoves","matchedCards","flipMatchedCardsDown","setWait","flipCardsDown","changeCardsPosition","openedCards","card","firstCard","secondCard","find","countMoves","countMatchedPairs","currentMoveCount","currentMatchedPairs","currentUnsuccessfulMoveCount","CardGridSlot","createCardPiece","Counter","label","getRandomPieceName","pieceNames","CardGridService","cardGridService","CardGrid","getMoveCount","getMatchedPairs","CardMenu","CardSetting","CardScoreBoard","fetchScores","scores","CardPage","cardScoreBoard","CardPageRoute","convertStyleToCss","css","SettingArea","changeStyleDebounce","_","debounce","attr","assign","changeStyle","handleChange","exportCode","addOption","persist","componentStyle","componentHtml","keyCode","option","options","onSubmit","placeholder","onKeyUp","componentGenerator","currentStyle","html","code","currentOptions","Button","setHtml","getHtml","DisplayArea","changeHtml","CodeArea","marginTop","cols","rows","marginBottom","ComponentGeneratorPage","ComponentGeneratorPageRoute","GLOBAL_GUARDS","MainRouter","guards","loading","initialState","changeLevel","getRandomInt","max","components","combineReducers","action","isCodeExporting","middleware","thunk","store","__REDUX_DEVTOOLS_EXTENSION__","createStore","rootReducer","applyMiddleware","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3aec0ac5.chunk.js","sourcesContent":["export const STORAGE_KEYS = Object.freeze({\r\n  IS_LOGGED_IN: 'isLoggedIn',\r\n});","import { STORAGE_KEYS } from 'utils/constants';\r\n\r\nconst getIsLoggedIn = () => localStorage.getItem(STORAGE_KEYS.IS_LOGGED_IN) === 'true';\r\n\r\nexport default getIsLoggedIn;\r\n","import { AUTH_ONLY } from 'router/types';\r\nimport { getIsLoggedIn } from 'utils';\r\n\r\nconst requireLogin = (to, from, next) => {\r\n  if (to.meta[AUTH_ONLY] && !getIsLoggedIn()) {\r\n    next.redirect('/login');\r\n  }\r\n  next();\r\n};\r\n\r\nexport default requireLogin;","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React from 'react';\r\nimport './nav.scss';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { logoutAction } from 'actions/auth-action';\r\n\r\nclass Nav extends React.Component {\r\n  constructor(props) {\r\n    super(props);    \r\n    this.logout = this.logout.bind(this);\r\n  } \r\n\r\n  logout() {    \r\n    this.props.logoutAction();        \r\n    this.props.history.push('login');\r\n  };\r\n\r\n  render() {\r\n    const isLoggedIn = this.props.isLoggedIn;    \r\n    return (\r\n      <div className=\"component-wrapper\">\r\n        <div className=\"nav\">\r\n          <div className=\"logo-wrapper\">\r\n            <h3>Logo</h3>\r\n          </div> \r\n          <div className=\"nav-links-wrapper\">\r\n            <ul className=\"nav-links\">\r\n              <li>\r\n                <Link to=\"/\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/clock\">Clock</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/puzzle\">Puzzle</Link>\r\n              </li>           \r\n              <li>\r\n              <div className=\"dropdown\">  \r\n                <span className=\"underline\">More</span>            \r\n                <div className=\"dropdown-content\">\r\n                  <div className=\"mt-10\">\r\n                    <Link to=\"/card\">Card</Link>\r\n                  </div>\r\n                  <div className=\"mt-10\">\r\n                    <Link to=\"/component-generator\">Component generator</Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              </li>\r\n              <li>{isLoggedIn && <button onClick={this.logout} style={{ color: 'black' }}>Log out</button>}</li>\r\n            </ul>\r\n            <div className=\"burger-dropdown\">  \r\n              <div className=\"burger\"></div>            \r\n              <div className=\"dropdown-content\">\r\n                <div className=\"mt-10\">\r\n                  <Link to=\"/\">Home</Link>\r\n                </div>\r\n                <div className=\"mt-10\">\r\n                  <Link to=\"/clock\">Clock</Link>\r\n                </div>\r\n                <div className=\"mt-10\">\r\n                  <Link to=\"/puzzle\">Puzzle</Link>\r\n                </div>\r\n                <div className=\"mt-10\">\r\n                  <Link to=\"/card\">Card</Link>\r\n                </div>\r\n                <div className=\"mt-10\">\r\n                  <Link to=\"/component-generator\">Component generator</Link>\r\n                </div>\r\n                <div className=\"mt-10\">\r\n                  {isLoggedIn && <button onClick={this.logout} style={{ color: 'black' }}>Log out</button>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNav.propsType = {\r\n  logoutAction: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoggedIn: state.auth.isLoggedIn\r\n})\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { logoutAction })\r\n)(Nav);","import {LOGIN, LOGOUT} from 'actions/type';\r\nimport { STORAGE_KEYS } from 'utils/constants';\r\nimport { getIsLoggedIn } from 'utils';\r\n\r\nexport function loginAction() {\r\n  return function(dispatch) {\r\n    localStorage.setItem(STORAGE_KEYS.IS_LOGGED_IN, 'true');\r\n    dispatch({\r\n      type: LOGIN,\r\n      isLoggedIn: getIsLoggedIn()\r\n    })\r\n  }\r\n}\r\n\r\nexport function logoutAction() {\r\n  return function(dispatch) {\r\n    localStorage.removeItem(STORAGE_KEYS.IS_LOGGED_IN);\r\n    dispatch({\r\n      type: LOGOUT,\r\n      isLoggedIn: getIsLoggedIn()\r\n    })\r\n  }\r\n}","export const LOGIN = 'login';\r\nexport const LOGOUT = 'logout'\r\n","import React from 'react';\r\nimport './puzzle-piece.scss';\r\n\r\nexport default class PuzzlePiece extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id={`piece-${this.props.id}`} className=\"puzzle-piece\" draggable={this.props.draggable}>\r\n        <h1>{this.props.id}</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PuzzlePiece from '../puzzle-piece/puzzle-piece'\r\nimport './puzzle-grid-slot.scss';\r\n\r\nexport default class PuzzleGridSlot extends React.Component {\r\n\r\n  createPuzzlePiece() {\r\n    const id = this.props.pieceId; \r\n    if (id !== null) {      \r\n      return <PuzzlePiece key={id} id={id} draggable={false}/>\r\n    }    \r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div id={`slot-${this.props.id}`} className=\"puzzle-grid__slot\">\r\n        {this.createPuzzlePiece()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './puzzle-swap-count.scss';\r\n\r\nexport default class PuzzleSwapCount extends React.Component {\r\n  _isMounted = false;\r\n  _stopSubscribe = false;\r\n  subscribeCount = () => {    \r\n    this.props.updateCount((count) => {               \r\n      if (!this._stopSubscribe && count !== this.state.count) {\r\n        this.setState(state => state.count = count)\r\n        if (count === 0) {\r\n          this._stopSubscribe = true; \r\n        } \r\n      }                    \r\n    })\r\n  }\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      subscribeTimer: 0,\r\n      count: props.swapChanceCount      \r\n    }\r\n    this.startSubscribe.bind(this)    \r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    if (this._isMounted) {\r\n      this.startSubscribe();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n    this._stopSubscribe = true;        \r\n  }\r\n\r\n  startSubscribe() {    \r\n    setInterval(() => this.setState({\r\n      subscribeTimer: this.state.subscribeTimer + 1\r\n    }), 50);\r\n  }\r\n\r\n  render() {    \r\n    if (!this._stopSubscribe) {\r\n      setTimeout(() => this.subscribeCount(), 0)    \r\n    }\r\n                 \r\n    return (     \r\n      <div className={`component-wrapper ${this.props.className}`}>\r\n        <p>Swap chance: {this.state.count}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './timer.scss';\r\n\r\nexport default class Timer extends React.Component {\r\n  _isMounted = false;\r\n  _isStopped = false;\r\n  subscribeStop = () => {\r\n    this.props.updateStop((stop) => {           \r\n      if (stop && !this._isStopped) {\r\n        this.stopTimer();\r\n        this._isStopped = true;\r\n        this.props.emitTime(this.state.time)   \r\n      }                    \r\n    })\r\n  }\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      time: 0,\r\n      isOn: false,\r\n      start: 0\r\n    }\r\n    this.startTimer = this.startTimer.bind(this)\r\n    this.stopTimer = this.stopTimer.bind(this)\r\n    this.resetTimer = this.resetTimer.bind(this)\r\n    this.upTimingFunc = this.upTimingFunc.bind(this)    \r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    if (this._isMounted) {\r\n      this.startTimer();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n    this.stopTimer();\r\n  }\r\n  \r\n  startTimer() {\r\n    this.setState({\r\n      isOn: true,\r\n      time: this.state.time,\r\n      start: Date.now() - this.state.time\r\n    })\r\n    this.timer = setInterval(() => this.setState({\r\n      time: Date.now() - this.state.start\r\n    }), 10);\r\n  }\r\n\r\n  stopTimer() {\r\n    this.setState({isOn: false})\r\n    clearInterval(this.timer)\r\n  }\r\n\r\n  resetTimer() {\r\n    this.setState({time: 0, isOn: false})\r\n  }\r\n\r\n  upTimingFunc() {\r\n    this.startTimer();\r\n  }\r\n\r\n  downTimingFunc(start) {\r\n\r\n  }\r\n\r\n  render() { \r\n    if (!this._isStopped) {\r\n      setTimeout(() => this.subscribeStop(), 0)    \r\n    }\r\n    \r\n    if (this.props.upTimer) {\r\n      return (\r\n        <div className=\"component-wrapper\">\r\n          \r\n        </div>\r\n      );\r\n    }\r\n    \r\n    let start = (this.state.time === 0) ?\r\n      <button onClick={this.startTimer}>start</button> : null      \r\n    let stop = (this.state.time === 0 || !this.state.isOn) ? null :      \r\n      <button onClick={this.stopTimer}>stop</button>\r\n    let resume = (this.state.time === 0 || this.state.isOn) ? null :      \r\n      <button onClick={this.startTimer}>resume</button>\r\n    let reset = (this.state.time === 0 || this.state.isOn) ? null :      \r\n      <button onClick={this.resetTimer}>reset</button>          \r\n    return (     \r\n      <div className={`component-wrapper ${this.props.className}`}>\r\n        <h3>timer: {(Math.floor(this.state.time / 10) / 100)} s</h3>        \r\n        {/* {start}\r\n        {resume}\r\n        {stop}\r\n        {reset} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const GRID_SIZE_LV1 = {\r\n  height: 3,\r\n  width: 3\r\n}\r\n\r\nconst GRID_SIZE_LV2 = {\r\n  height: 4,\r\n  width: 4\r\n}\r\n\r\nconst config = {\r\n  CARD_API_URL: 'https://5e9e56abfb467500166c3dce.mockapi.io/react-misc/'\r\n}\r\n\r\nconst constants =  {  \r\n  GRID_SIZE_LV1,\r\n  GRID_SIZE_LV2,\r\n  config,\r\n}\r\n\r\nexport default constants","const GridService = () => {\r\n  return {\r\n    getPieceIdSet,\r\n    getRandomPieceId,\r\n    getIdNumber,\r\n    getIdNumbers,\r\n    findEmptySlots,\r\n    coloringEmptySlots,\r\n    transformSlots,\r\n    isAdjacent,\r\n    swapPieces\r\n  }\r\n};\r\n\r\nconst getIdNumber = (item) => {\r\n  return +(item.id.split('-')[1])\r\n}\r\n\r\nconst getIdNumbers = (items) => {\r\n  const ids = []\r\n  items.forEach(item => {\r\n    const id = getIdNumber(item);\r\n    ids.push(id)\r\n  })\r\n  return ids;\r\n}\r\n\r\nconst getPieceIdSet = (gridSize, emptySlotQuantity = 0) => {\r\n  const pieceIdSet = [];\r\n  for (let i = 0; i < gridSize - emptySlotQuantity; i++) {      \r\n    pieceIdSet.push(i)      \r\n  }\r\n  return pieceIdSet\r\n}\r\n\r\nconst getRandomPieceId = (pieceIdSet) => {       \r\n  const splicePos = Math.floor(Math.random()*100 % pieceIdSet.length)\r\n  const pieceId = pieceIdSet.splice(splicePos, 1)\r\n  return pieceId[0]; \r\n}\r\n\r\nconst findEmptySlots = (slots) => {    \r\n  let emptySlots = [];\r\n  slots.forEach(slot => {\r\n    if (!slot.hasChildNodes()) {\r\n      emptySlots.push(slot);        \r\n    }\r\n  })\r\n  return emptySlots;\r\n}\r\n\r\nconst coloringEmptySlots = (emptySlots, color) => {\r\n  emptySlots.forEach(emptySlot => emptySlot.style.backgroundColor = color);  \r\n}\r\n\r\nconst transformSlots = (slots, emptySlots, arraySize) => {    \r\n  const transformedSlots = [];\r\n  const emptySlotIds = getIdNumbers(emptySlots);\r\n\r\n  slots.forEach(slot => {\r\n    const slotId = getIdNumber(slot);\r\n    let draggableChecked = false;     \r\n    emptySlots.forEach(emptySlot => {\r\n      if (!emptySlotIds.includes(slotId) && !draggableChecked) { \r\n        if (isAdjacent(slot, emptySlot, arraySize)) {\r\n          slot.firstElementChild.draggable = true;\r\n          draggableChecked = true;       \r\n        }\r\n        else {\r\n          slot.firstElementChild.draggable = false;  \r\n        }  \r\n      }         \r\n    });   \r\n    transformedSlots.push(slot);\r\n  })\r\n  return transformedSlots;\r\n}\r\n\r\nconst isAdjacent = (slot, comparedSlot, arraySize) => {  \r\n  const slotId = getIdNumber(slot);\r\n  const comparedSlotId = getIdNumber(comparedSlot);  \r\n  if ((slotId === comparedSlotId + 1 && Math.floor(slotId/arraySize) === Math.floor(comparedSlotId/arraySize)) ||\r\n    (slotId === comparedSlotId - 1 && Math.floor(slotId/arraySize) === Math.floor(comparedSlotId/arraySize)) ||\r\n    slotId === comparedSlotId + arraySize ||\r\n    slotId === comparedSlotId - arraySize) \r\n  {\r\n    return true;\r\n  }\r\n  return false\r\n}\r\n\r\nconst swapPieces = (slot1, slot2, arraySize) => {  \r\n  if (slot1.hasChildNodes && slot2.hasChildNodes && isAdjacent(slot1, slot2, arraySize)) {\r\n    const slot1Copy = slot1.cloneNode(true);\r\n    const slot2Copy = slot2.cloneNode(true);      \r\n    slot1Copy.replaceChild(slot1.firstElementChild, slot1Copy.childNodes[0])\r\n    slot2Copy.replaceChild(slot2.firstElementChild, slot2Copy.childNodes[0])\r\n    slot1.appendChild(slot2Copy.firstElementChild)\r\n    slot2.appendChild(slot1Copy.firstElementChild)\r\n    return true;\r\n  }\r\n  return false\r\n}\r\n\r\nexport default GridService;","import React from 'react';\r\nimport './puzzle-grid.scss';\r\nimport PuzzleGridSlot from '../puzzle-grid-slot/puzzle-grid-slot';\r\nimport PuzzleSwapCount from '../puzzle-swap-count/puzzle-swap-count'\r\nimport Timer from 'components/timer/timer';\r\nimport constants from 'shared/constants';\r\nimport * as _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { broadcastWinning, restartGame, setWinningInfo } from 'actions/puzzle-action';\r\nimport GridService from 'services/grid.service';\r\n\r\nconst gridService = GridService();\r\n\r\nconst gridSlotSize = (gridSize) => {\r\n  let width = window.innerWidth <= 540 ? 90 : 160;\r\n  let height = window.innerWidth <= 540 ? 90 : 160;\r\n  if (gridSize.width > 3 || gridSize.height > 3) {\r\n    if (window.innerWidth <= 540) {\r\n      width = 70;\r\n      height = 70; \r\n    } else {\r\n      width = 120;\r\n      height = 120; \r\n    }    \r\n  }\r\n  return {\r\n    width,\r\n    height\r\n  }  \r\n}\r\n\r\nconst gap = 10;\r\nconst HorizontalGaps = constants.GRID_SIZE_LV1.width * gap\r\nconst VerticalGaps = constants.GRID_SIZE_LV1.height * gap\r\n\r\nconst gridStyle = { \r\n  width: `${constants.GRID_SIZE_LV1.width * gridSlotSize(constants.GRID_SIZE_LV1).width + HorizontalGaps}px`,\r\n  height: `${constants.GRID_SIZE_LV1.height * gridSlotSize(constants.GRID_SIZE_LV1).height + VerticalGaps}px`,  \r\n  gridTemplateColumns: `repeat(${constants.GRID_SIZE_LV1.width}, ${gridSlotSize(constants.GRID_SIZE_LV1).width}px)`,\r\n  gridTemplateRows: `repeat(${constants.GRID_SIZE_LV1.height}, ${gridSlotSize(constants.GRID_SIZE_LV1).height}px)`,\r\n  gridGap: `${gap}px`,\r\n  border: `1px solid wheat`,  \r\n}\r\n\r\nclass PuzzleGrid extends React.Component {\r\n  emptySlotBg = 'rgba(255, 255, 255, 0.3)';\r\n  slotBg = 'rgba(255, 255, 255, 1)';\r\n  hoveredSlotBg = 'rgba(255, 255, 255, .6)';\r\n  swapChanceCount = 1;\r\n  _isMounted = false;\r\n  isWin = false; \r\n  subscribeWinning = (callback) => {\r\n    this.isWin = this.props.isWin;      \r\n    callback(this.isWin);\r\n  }\r\n  getEmittedTime = (emittedTime) => {\r\n    console.log('get time');     \r\n    const winningInfo = {\r\n      playedTime: emittedTime,\r\n      playerName: 'Unknown player',\r\n      level: this.props.gameLevel.level\r\n    }\r\n    this.props.setWinningInfo(winningInfo)\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.announceWinning = this.announceWinning.bind(this);\r\n    this.getSwapChanceCount = this.getSwapChanceCount.bind(this);\r\n    this.gameSettings = {\r\n      emptySlotQuantity: props.gameLevel.emptySlotQuantity,\r\n      arraySize: props.gameLevel.arraySize\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (nextProps.isUpdated) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  componentDidMount() {    \r\n    this.initDraggingEnvironment();   \r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.restartGame();\r\n  }\r\n\r\n  createEmptySlotIds(gridSize, emptySlotQuantity) {\r\n    const emptySlotIds = [];\r\n    let count = 0;\r\n    while (count < emptySlotQuantity) {\r\n      const emptySlotId = Math.floor(Math.random()*100 % gridSize);\r\n      if (emptySlotIds.includes(emptySlotId)) {\r\n        continue;\r\n      }\r\n      emptySlotIds.push(emptySlotId)\r\n      count++; \r\n    }\r\n    return emptySlotIds;    \r\n  }\r\n\r\n  createGridSlots(emptySlotQuantity) {\r\n    const slots = [];\r\n    const gridSize = constants.GRID_SIZE_LV1.height * constants.GRID_SIZE_LV1.width;\r\n    const emptySlotIds = this.createEmptySlotIds(gridSize, emptySlotQuantity);\r\n    const pieceIdSet = gridService.getPieceIdSet(gridSize, emptySlotQuantity);    \r\n    for (let i = 0; i < gridSize; i++) {\r\n      let pieceId = null;\r\n      if (!emptySlotIds.includes(i)) {\r\n        pieceId = gridService.getRandomPieceId(pieceIdSet);\r\n      }\r\n      slots.push(<PuzzleGridSlot id={i} key={i} pieceId={pieceId} />)\r\n    }\r\n    return slots;\r\n  }\r\n\r\n  getSwapChanceCount(callback) {                   \r\n    callback(this.swapChanceCount)\r\n  }\r\n\r\n  initDraggingEnvironment() {\r\n    let gridSlots = Array.from(document.querySelectorAll('.puzzle-grid__slot'));    \r\n    let emptySlots = gridService.findEmptySlots(gridSlots)    \r\n    let transformedSlots = gridService.transformSlots(gridSlots, emptySlots, this.gameSettings.arraySize);\r\n    const puzzlePieces = Array.from(document.querySelectorAll('.puzzle-piece'));    \r\n    gridService.coloringEmptySlots(emptySlots, this.emptySlotBg)     \r\n    let draggedItem = null;\r\n    let originalSlot = null;\r\n\r\n    puzzlePieces.forEach(piece => {      \r\n      piece.addEventListener('dragstart', () => {\r\n        originalSlot = piece.parentElement;        \r\n        draggedItem = piece;\r\n        setTimeout(() => {\r\n          draggedItem.style.display = 'none';\r\n        })\r\n      });\r\n      \r\n      piece.addEventListener('dragend', () => {       \r\n        setTimeout(() => {          \r\n          draggedItem.style.display = 'flex';\r\n          draggedItem = null\r\n        })\r\n      });  \r\n      \r\n      gridSlots.forEach(slot => {\r\n        const slotOriginalColor = slot.style.backgroundColor;\r\n\r\n        slot.addEventListener('dragover', (e) => {\r\n          e.preventDefault();          \r\n        });\r\n\r\n        slot.addEventListener('dragenter', (e) => {\r\n          e.preventDefault();\r\n          if (originalSlot.id !== slot.id && !slot.hasChildNodes()) {\r\n            slot.style.backgroundColor = this.hoveredSlotBg;          \r\n          }                \r\n        });\r\n\r\n        slot.addEventListener('dragleave', (e) => {\r\n          e.preventDefault();\r\n          const emptySlotIds = gridService.getIdNumbers(emptySlots);\r\n          const slotId = gridService.getIdNumber(slot)\r\n          if (!emptySlotIds.includes(slotId)) {\r\n            slot.style.backgroundColor = this.slotBg;   \r\n          }\r\n          else {\r\n            slot.style.backgroundColor = this.emptySlotBg  \r\n          }                 \r\n        });\r\n        \r\n        slot.addEventListener('drop', (e) => {          \r\n          const draggedSlot = draggedItem.parentNode;          \r\n          const slotId = gridService.getIdNumber(slot)\r\n          const draggedSlotId = gridService.getIdNumber(draggedSlot)     \r\n          if (!slot.hasChildNodes() && gridService.isAdjacent(slot, draggedSlot, this.gameSettings.arraySize)) { \r\n            draggedItem.style.display = 'flex';           \r\n            slot.append(draggedItem)            \r\n            slot.style.backgroundColor = this.slotBg\r\n            gridSlots = Array.from(document.querySelectorAll('.puzzle-grid__slot'));    \r\n            emptySlots = gridService.findEmptySlots(gridSlots)\r\n            gridService.coloringEmptySlots(emptySlots, this.emptySlotBg)    \r\n            transformedSlots = gridService.transformSlots(gridSlots, emptySlots, this.gameSettings.arraySize);            \r\n            setTimeout(() => {\r\n              if (this.checkWiningCondition(transformedSlots, emptySlots)) {\r\n                this.announceWinning();\r\n              }              \r\n            }, 100)            \r\n          }\r\n          else if (slot.hasChildNodes() && this.swapChanceCount > 0) {            \r\n            const swapSuccess = gridService.swapPieces(draggedSlot, slot, this.gameSettings.arraySize)\r\n            slot.firstElementChild.style.display = 'flex';\r\n            transformedSlots = gridService.transformSlots(gridSlots, emptySlots, this.gameSettings.arraySize);\r\n            if (swapSuccess) {\r\n              this.swapChanceCount--;\r\n            } \r\n          }\r\n          else if (slotId !== draggedSlotId) {\r\n            slot.style.backgroundColor = slotOriginalColor;\r\n          }          \r\n        });         \r\n      })\r\n    });\r\n  }\r\n\r\n  checkWiningCondition(gridSlots, emptySlots) {\r\n    let count = 0;\r\n    const winningCount = gridSlots.length - emptySlots.length;       \r\n    gridSlots.forEach(slot => {\r\n      const child = slot.firstElementChild;\r\n      const slotId = gridService.getIdNumber(slot);\r\n      let childId = null;\r\n      if (child) {\r\n        childId = gridService.getIdNumber(child)\r\n      }\r\n      if (slotId === childId) {\r\n        count++;\r\n      }\r\n    })       \r\n    if (count === winningCount) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  announceWinning() {\r\n    this.props.broadcastWinning();    \r\n    setTimeout(() => {\r\n      console.log('You win the game', this.props.isWin);\r\n      alert('Congratulation! You win the game')  \r\n    }, 100)      \r\n  }\r\n  \r\n  render() {    \r\n    const gridSlots = this.createGridSlots(this.gameSettings.emptySlotQuantity);    \r\n    return (\r\n      <div className=\"component-wrapper puzzle-wrapper\">\r\n        <div className=\"puzzle-grid\" style={gridStyle}>\r\n          {gridSlots.map(item => item)}\r\n        </div>\r\n        <Timer className={'timer-pos'} \r\n          stop={this.isWin} \r\n          updateStop={this.subscribeWinning} \r\n          emitTime={this.getEmittedTime}\r\n        />\r\n        <PuzzleSwapCount className={'text-pos'} updateCount={this.getSwapChanceCount} swapChanceCount={this.swapChanceCount}/>\r\n        {/* <button onClick={this.announceWinning}>Win</button> */}\r\n      </div>\r\n    );\r\n  }  \r\n}\r\n\r\nPuzzleGrid.propsType = {\r\n  broadcastWinning: PropTypes.func.isRequired,\r\n  restartGame: PropTypes.func.isRequired,\r\n  setWinningInfo: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isUpdated: false,\r\n  isWin: state.puzzle.isWin,\r\n  gameLevel: state.puzzle.gameLevel\r\n})\r\n\r\nexport default connect(mapStateToProps, { broadcastWinning, restartGame, setWinningInfo })(PuzzleGrid);","\r\nexport function broadcastWinning() {\r\n  return function(dispatch) {    \r\n    dispatch({\r\n      type: 'broadcastWinning',\r\n      isWin: true\r\n    })\r\n  }\r\n}\r\n\r\nexport function restartGame() {\r\n  return function(dispatch) {    \r\n    dispatch({\r\n      type: 'broadcastWinning',\r\n      isWin: false\r\n    })\r\n  }\r\n}\r\n\r\nexport function changeGameLevel(level) {  \r\n  return function(dispatch) {    \r\n    dispatch({\r\n      type: 'changeGameLevel',\r\n      level\r\n    })\r\n  }\r\n}\r\n\r\nexport function setWinningInfo(info) {  \r\n  return function(dispatch) {    \r\n    dispatch({\r\n      type: 'setWinningInfo',\r\n      winningInfo: info\r\n    })\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './puzzle-menu.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default class PuzzleMenu extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"component-wrapper\">\r\n        <ul className=\"puzzle-menu\">\r\n          <li>\r\n            <Link to=\"/puzzle/game\">Start Game</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/puzzle/score-board\">Score Board</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/puzzle/setting\">Setting</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './puzzle-setting.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { changeGameLevel } from 'actions/puzzle-action';\r\n\r\nclass PuzzleSetting extends React.Component {  \r\n  change = (event) => {    \r\n    this.props.changeGameLevel(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"component-wrapper\">        \r\n        <ul className=\"puzzle-setting\">\r\n          <div className=\"setting-option-wrapper\">\r\n            <label htmlFor=\"level\" style={{marginRight: '10px'}}>Game Level:</label>\r\n            <select name=\"level\" id=\"level\" onChange={this.change} value={this.props.level}>\r\n              <option value=\"Easy\">Easy</option>\r\n              <option value=\"Normal\">Normal</option>\r\n              <option value=\"Hard\">Hard</option>\r\n            </select> \r\n          </div>\r\n                   \r\n          <li>\r\n            <Link to=\"/puzzle\">Back</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPuzzleSetting.propsType = {  \r\n  changeGameLevel: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isUpdated: false,\r\n  level: state.puzzle.gameLevel.level\r\n})\r\n\r\nexport default connect(mapStateToProps, { changeGameLevel })(PuzzleSetting);\r\n","import React from 'react';\r\nimport './puzzle-score-board.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass PuzzleScoreBoard extends React.Component {  \r\n  \r\n  render() {\r\n    const sortedWinningInfo = this.props.winningInfo.sort((info1, info2) => {\r\n      return info1.playedTime - info2.playedTime;\r\n    })\r\n    return (\r\n      <div className=\"component-wrapper\">        \r\n        <ul className=\"puzzle-menu\">\r\n          {sortedWinningInfo.map((info) => {\r\n            const index = sortedWinningInfo.indexOf(info)\r\n            return(\r\n              <p key={index}>{index+1}. {info.playerName}: {+info.playedTime/1000}s ({info.level})</p>\r\n            ) \r\n          })}          \r\n          <li>\r\n            <Link to=\"/puzzle\">Back</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isUpdated: false,\r\n  winningInfo: state.puzzle.winningInfo\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(PuzzleScoreBoard);\r\n","import React from 'react';\r\nimport './puzzle-page.scss';\r\nimport PuzzleGrid from './puzzle-grid/puzzle-grid';\r\nimport PuzzleMenu from './puzzle-menu/puzzle-menu';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport PuzzleSetting from './puzzle-setting/puzzle-setting';\r\nimport puzzleScoreBoard from './puzzle-score-board/puzzle-score-board';\r\n\r\nexport default class PuzzlePage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"component-wrapper\">\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <Switch>\r\n              <Route path=\"/puzzle\" exact component={PuzzleMenu} />\r\n              <Route path=\"/puzzle/game\" exact component={PuzzleGrid} />\r\n              <Route path=\"/puzzle/setting\" exact component={PuzzleSetting} />\r\n              <Route path=\"/puzzle/score-board\" exact component={puzzleScoreBoard} />\r\n            </Switch>\r\n          </header>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport PuzzlePage from 'pages/puzzle-page/puzzle-page';\r\n\r\nconst PuzzlePageRoute = () => {\r\n  return (\r\n    <Route path=\"/puzzle\" component={PuzzlePage} />\r\n  )\r\n}\r\n\r\nexport default PuzzlePageRoute;","import React from 'react';\r\nimport './home-page.scss';\r\n\r\nexport default class HomePage extends React.Component {  \r\n  render() {   \r\n    return (\r\n      <div className=\"component-wrapper\">\r\n        <h1>HomePage</h1>\r\n      </div>\r\n    );\r\n  }  \r\n}\r\n","import React from 'react';\r\nimport HomePage from 'pages/home-page/home-page';\r\nimport { GuardedRoute } from 'react-router-guards';\r\nconst HomePageRoute = () => {\r\n  return (\r\n    <GuardedRoute path=\"/\" exact component={HomePage} meta={{AUTH_ONLY: true}} />\r\n  )\r\n}\r\n\r\nexport default HomePageRoute;","import React from 'react';\r\nimport './clock.scss';\r\n\r\nexport default class Clock extends React.Component {\r\n  render() {    \r\n    const hour = this.props.hour\r\n    const minute = this.props.minute\r\n    const second = this.props.second\r\n    return (\r\n      <div className=\"component-wrapper\">\r\n        <div className=\"clock-wrapper\">\r\n          <div className=\"clock\">\r\n            <div className=\"hand hour-hand\" style={{transform: `rotate(${hour*30 + minute/2 + second/120 - 90}deg)`}}></div>\r\n            <div className=\"hand minute-hand\" style={{transform: `rotate(${minute*6 + second/10 - 90}deg)`}}></div>\r\n            <div className=\"hand second-hand\" style={{transform: `rotate(${second*6 - 90}deg)`}}></div>\r\n          </div>         \r\n        </div>\r\n        <div className=\"timer\">{hour}:{minute < 10 ? '0' + minute : minute}:{second < 10 ? '0' + second : second}</div>       \r\n      </div>      \r\n    );\r\n  }  \r\n}\r\n","import React from 'react';\r\n\r\nimport './clock-page.scss';\r\nimport Clock from './clock/clock';\r\n\r\nexport default class ClockPage extends React.Component {\r\n  _isMounted = false;\r\n  clock;\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      time: new Date()\r\n    }    \r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    if (this._isMounted) {\r\n      this.clock = setInterval(()=> {\r\n        this.setState(state => state.time = new Date())\r\n      }, 1000)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n    clearInterval(this.clock);\r\n  }\r\n\r\n  render() {        \r\n    const hour = this.state.time.getHours()\r\n    const minute = this.state.time.getMinutes()\r\n    const second = this.state.time.getSeconds()\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <Clock \r\n            hour={hour} \r\n            minute={minute} \r\n            second={second} \r\n          />          \r\n        </header>\r\n      </div>\r\n    );\r\n  }  \r\n}\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport ClockPage from 'pages/clock-page/clock-page';\r\n\r\nconst ClockPageRoute = () => {\r\n  return (\r\n    <Route path=\"/clock\" component={ClockPage} />\r\n  )\r\n}\r\n\r\nexport default ClockPageRoute;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './login-page.scss';\r\nimport { connect } from 'react-redux';\r\nimport { loginAction } from 'actions/auth-action';\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.login = this.login.bind(this);\r\n  } \r\n\r\n  login() {    \r\n    this.props.loginAction();    \r\n  };\r\n\r\n  render() {     \r\n    if (this.props.isLoggedIn) {\r\n      return <Redirect to={\"/\"} />\r\n    }   \r\n    return (\r\n      <div className=\"component-wrapper\">\r\n        <button onClick={this.login}>Log in</button>\r\n      </div>\r\n    );    \r\n  }  \r\n}\r\n\r\nLoginPage.propTypes = {  \r\n  loginAction: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoggedIn: state.auth.isLoggedIn\r\n})\r\n\r\nexport default connect(mapStateToProps, { loginAction })(LoginPage);","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport LoginPage from 'pages/login-page/login-page';\r\n\r\nconst LoginPageRoute = () => {\r\n  return (\r\n    <Route path=\"/login\" component={LoginPage} />\r\n  )\r\n}\r\n\r\nexport default LoginPageRoute;","import axios from 'axios';\r\n\r\nexport default async function callApi(apiUrl, endpoint, method = 'GET', body) {\r\n  return axios({\r\n    method,\r\n    url: `${apiUrl}/${endpoint}`,\r\n    data: body\r\n  }).catch(error => {\r\n    console.log(error);    \r\n  })\r\n}","import constants from 'shared/constants';\r\nimport callApi from 'services/api-caller.service'\r\n\r\nconst config = constants.config;\r\n\r\nexport function fetchScores() {\r\n  return async function(dispatch) { \r\n    return callApi(config.CARD_API_URL, 'card-score', 'GET', null).then(res => {\r\n      const sortedWinningInfo = res.data.sort((info1, info2) => {\r\n        return info1.winningInfo.moves - info2.winningInfo.moves;\r\n      })\r\n      dispatch(saveScores(sortedWinningInfo))\r\n    })          \r\n  }\r\n}\r\n\r\nexport function saveScores(score) {\r\n  return {\r\n    type: 'saveScores',\r\n    winningInfo: score\r\n  }  \r\n}\r\n\r\nexport function increaseUnsuccessfulMoveCount(currentUnsuccessfulMoveCount) {\r\n  return function(dispatch) {        \r\n    dispatch({\r\n      type: 'alterUnsuccessfulMoveCount',\r\n      unsuccessfulMoves: increaseCount(currentUnsuccessfulMoveCount, 2),      \r\n    })\r\n  }\r\n}\r\n\r\nexport function resetUnsuccessfulMoveCount() {\r\n  return function(dispatch) {        \r\n    dispatch({\r\n      type: 'alterUnsuccessfulMoveCount',\r\n      unsuccessfulMoves: 0,      \r\n    })\r\n  }\r\n}\r\n\r\nexport function increaseMoveCount(currentMoveCount) {\r\n  return function(dispatch) {        \r\n    dispatch({\r\n      type: 'increaseMoveCount',\r\n      moveCount: increaseCount(currentMoveCount, 1),      \r\n    })\r\n  }\r\n}\r\n\r\nexport function alterMatchedPairCount(currentMatchedPairs, amount) {\r\n  return function(dispatch) {        \r\n    dispatch({\r\n      type: 'alterMatchedPairCount',\r\n      matchedPairs: increaseCount(currentMatchedPairs, amount),      \r\n    })\r\n  }\r\n}\r\n\r\nexport function setWait(isWaiting) {\r\n  return function(dispatch) {        \r\n    dispatch({\r\n      type: 'setWait',\r\n      isWaiting,      \r\n    })\r\n  }\r\n}\r\n\r\nexport function broadcastWinning() {\r\n  return function(dispatch) {    \r\n    dispatch({\r\n      type: 'broadcastWinning',\r\n      isWin: true\r\n    })\r\n  }\r\n}\r\n\r\nexport function restartGame() {\r\n  return function(dispatch) {    \r\n    dispatch({\r\n      type: 'restartGame',\r\n      isWin: false,\r\n      moveCount: 0,\r\n      matchedPairs: 0,\r\n    })\r\n  }\r\n}\r\n\r\nexport function changeGameLevel(level) {  \r\n  return function(dispatch) {    \r\n    dispatch({\r\n      type: 'changeGameLevel',\r\n      level\r\n    })\r\n  }\r\n}\r\n\r\nexport function setWinningInfo(info) {  \r\n  return function(dispatch) {    \r\n    dispatch({\r\n      type: 'setWinningInfo',\r\n      winningInfo: info\r\n    })\r\n  }\r\n}\r\n\r\nexport  function toggleShiftMode(toggle) {  \r\n  return {\r\n    type: 'toggleShiftMode',\r\n    toggle: !toggle\r\n  }  \r\n}\r\n\r\nfunction increaseCount(count, amount) {  \r\n  return count + amount;\r\n}\r\n","import axios from 'axios';\r\n\r\nconst updateWinningInfo = (winningInfo) => {\r\n  axios.post(`https://5e9e56abfb467500166c3dce.mockapi.io/react-misc/card-score`, {winningInfo})\r\n    .then(res => {      \r\n      console.log(res.data);\r\n    })\r\n    .catch(error => console.log(error));\r\n}\r\n\r\nconst getWinningInfo = async () => {\r\n  return axios({\r\n    method: 'GET',\r\n    url: `https://5e9e56abfb467500166c3dce.mockapi.io/react-misc/card-score`\r\n  }).catch(error => console.log(error))  \r\n}\r\n\r\nconst cardService = {\r\n  updateWinningInfo,\r\n  getWinningInfo\r\n}\r\n\r\nexport default cardService;","import React from 'react';\r\nimport './card-piece.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { alterMatchedPairCount, setWait, increaseMoveCount, \r\n  broadcastWinning, setWinningInfo, toggleShiftMode, increaseUnsuccessfulMoveCount,\r\n  resetUnsuccessfulMoveCount } \r\n  from 'actions/card-action';\r\nimport cardService from 'services/card.service';\r\n\r\nclass CardPiece extends React.Component {\r\n  constructor(props) {\r\n    super()    \r\n    this.flipCardUp = this.flipCardUp.bind(this); \r\n    this.setWinningInfo = this.setWinningInfo.bind(this);\r\n    this.checkWiningCondition = this.checkWiningCondition.bind(this);   \r\n    this.announceWinning = this.announceWinning.bind(this);   \r\n    this.shiftArrayByCase = this.shiftArrayByCase.bind(this);\r\n    this.shiftArrayNightmare = this.shiftArrayNightmare.bind(this);\r\n  }\r\n\r\n  componentDidMount() {    \r\n   \r\n  }\r\n\r\n  setWinningInfo(winningInfo) {          \r\n    this.props.setWinningInfo(winningInfo)\r\n  }\r\n\r\n  updateWinningInfo(winningInfo) {\r\n    cardService.updateWinningInfo(winningInfo);\r\n  }\r\n\r\n  isPairMatching() { \r\n    const openedPair = document.getElementsByClassName('flip-up unmatched');\r\n    const card1Name = openedPair[0].getAttribute(\"name\");\r\n    const card2Name = openedPair[1].getAttribute(\"name\");\r\n    if (card1Name === card2Name) {\r\n      return true\r\n    }\r\n    return false;       \r\n  }\r\n\r\n  disableFlip() {    \r\n    const openedPair = document.getElementsByClassName('flip-up unmatched');\r\n    const card1 = openedPair[0];\r\n    const card2 = openedPair[1];\r\n    card1.classList.remove('unmatched')  \r\n    card1.classList.add('matched')  \r\n    card2.classList.remove('unmatched')  \r\n    card2.classList.add('matched')  \r\n  }\r\n\r\n  isEven(number) {\r\n    return number % 2 === 0;\r\n  }\r\n\r\n  shiftArrayToLeft(arr, steps) {    \r\n    arr = arr.concat(arr.splice(0, steps)); \r\n    return arr;    \r\n  }\r\n\r\n  shiftArrayToRight(arr, steps) {     \r\n    arr = arr.concat(arr.splice(0, arr.length - steps)); \r\n    return arr;\r\n  }\r\n\r\n  changeCardsPosition() {\r\n    const slots = document.getElementsByClassName('card-grid__slot');\r\n    const unmatchedSlots = [];\r\n    let children = [];\r\n    for (const slot of slots) {\r\n      const child = slot.firstChild;\r\n      if (child.classList.contains('unmatched')) {\r\n        children.push(child);\r\n        unmatchedSlots.push(slot);\r\n      }      \r\n    }\r\n\r\n    if (this.props.gameLevel.level === 'Nightmare') {\r\n      children = this.shiftArrayNightmare(children);\r\n    }\r\n    else {\r\n      children = this.shiftArrayByCase(children, this.props.gameLevel.shiftCase);\r\n    }\r\n\r\n    for (let i = 0; i < unmatchedSlots.length; i++) {   \r\n      const slot = unmatchedSlots[i];      \r\n      const firstChild = slot.firstChild;     \r\n      if (firstChild) {\r\n        slot.removeChild(firstChild)\r\n      }       \r\n      slot.appendChild(children[i]);      \r\n    }     \r\n  }\r\n\r\n  shiftArrayByCase(arr, shiftCase) {\r\n    switch (shiftCase) {\r\n      case 1: \r\n        arr = this.shiftArrayToLeft(arr, 2);\r\n        return arr;\r\n      case 2:\r\n        arr = this.shiftArrayToRight(arr, 2);\r\n        return arr;      \r\n      default:\r\n        return arr;\r\n    }\r\n  }\r\n\r\n  shiftArrayNightmare(arr) {       \r\n    let toggle = this.props.gameLevel.toggle;\r\n    if ((this.props.moveCount + 2) % 10 === 0) {\r\n      this.props.toggleShiftMode(toggle);\r\n    }\r\n    if (toggle) {\r\n      arr = this.shiftArrayToRight(arr, 2);\r\n    } else {\r\n      arr = this.shiftArrayToLeft(arr, 2);\r\n    }        \r\n    return arr;\r\n  }\r\n\r\n  flipCardUp() {\r\n    const cardPiece = document.querySelector(`#piece-${this.props.id}`);  \r\n    if (cardPiece.classList.contains('unmatched') && !this.props.isWaiting) {      \r\n      if (!cardPiece.classList.contains('flip-up')) {       \r\n        cardPiece.classList.add('flip-up');\r\n        this.props.increaseMoveCount(this.props.moveCount)           \r\n        if (this.isEven(this.props.moveCount+1)) {\r\n          if(this.isPairMatching()) {\r\n            if (this.props.gameLevel.level === 'Nightmare') {\r\n              this.props.resetUnsuccessfulMoveCount();\r\n            }\r\n            this.props.alterMatchedPairCount(this.props.matchedPairs, 1);            \r\n            this.disableFlip();            \r\n            if (this.checkWiningCondition()) {\r\n              const winningInfo = {\r\n                moves: this.props.moveCount + 1,\r\n                playerName: 'Unknown player',\r\n                level: this.props.gameLevel.level\r\n              }\r\n              this.announceWinning();              \r\n              this.updateWinningInfo(winningInfo);\r\n            }            \r\n          }\r\n          else {            \r\n            if (this.props.gameLevel.level === 'Nightmare') {              \r\n              this.props.increaseUnsuccessfulMoveCount(this.props.gameLevel.unsuccessfulMoves);\r\n              if ((this.props.gameLevel.unsuccessfulMoves + 2) >= 12 && \r\n                (this.props.gameLevel.unsuccessfulMoves + 2 - 12) % 4 === 0) {              \r\n                const matchedCards = [...document.getElementsByClassName('flip-up matched')];     \r\n                if (matchedCards.length > 1 ) {\r\n                  this.props.alterMatchedPairCount(this.props.matchedPairs, -1); \r\n                  this.flipMatchedCardsDown(matchedCards);\r\n                }            \r\n                else {\r\n                  this.props.resetUnsuccessfulMoveCount();\r\n                }\r\n              }              \r\n            }            \r\n            this.props.setWait(true);\r\n            setTimeout(() => this.flipCardsDown(), 1000);           \r\n          }          \r\n          if (this.props.gameLevel.level === 'Hard' || this.props.gameLevel.level === 'Nightmare') {            \r\n            setTimeout(() => this.changeCardsPosition(), 1001);\r\n          }\r\n                              \r\n        }        \r\n      }\r\n    }           \r\n  }  \r\n\r\n  flipCardsDown() {    \r\n    const openedCards = [...document.getElementsByClassName('flip-up unmatched')];\r\n    for (const card of openedCards) {\r\n      if (card.classList.contains('unmatched')) {      \r\n        if (card.classList.contains('flip-up')) {\r\n          card.classList.remove('flip-up');\r\n        }\r\n      }\r\n    }    \r\n    this.props.setWait(false);   \r\n  }\r\n\r\n  flipMatchedCardsDown(matchedCards) {\r\n    const firstCard = matchedCards[0];\r\n    matchedCards.splice(0, 1);\r\n    const secondCard = matchedCards.find(card => card.getAttribute(\"name\") === firstCard.getAttribute(\"name\"))\r\n    firstCard.classList.remove('matched', 'flip-up')\r\n    firstCard.classList.add('unmatched')\r\n    secondCard.classList.remove('matched', 'flip-up')\r\n    secondCard.classList.add('unmatched')\r\n  }\r\n\r\n  checkWiningCondition() {\r\n    const arraySize = this.props.gameLevel.arraySize;\r\n    if (this.props.matchedPairs+1 === arraySize*arraySize/2) {\r\n      return true\r\n    }\r\n    return false;\r\n  }\r\n\r\n  announceWinning() {\r\n    this.props.broadcastWinning();    \r\n    setTimeout(() => {\r\n      console.log('You win the game', this.props.isWin);\r\n      alert('Congratulation! You win the game')  \r\n    }, 100)      \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"component-wrapper card-wrapper h-full unmatched\" name={this.props.name} \r\n        id={`piece-${this.props.id}`} onClick={this.flipCardUp}>\r\n        <div id={`piece-${this.props.id}-front`} className=\"card-piece card-front\">\r\n          <h1>{this.props.name}</h1>\r\n        </div>\r\n        <div id={`piece-${this.props.id}-back`} className=\"card-piece card-back\"></div>\r\n      </div>      \r\n    );\r\n  }\r\n}\r\n\r\nCardPiece.propsType = {\r\n  countMoves: PropTypes.func.isRequired,\r\n  countMatchedPairs: PropTypes.func.isRequired,\r\n  setWait: PropTypes.func.isRequired,\r\n  broadcastWinning: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  moveCount: state.card.moveCount,\r\n  matchedPairs: state.card.matchedPairs,\r\n  isWaiting: state.card.isWaiting,\r\n  gameLevel: state.card.gameLevel,\r\n  winningInfo: state.card.winningInfo,  \r\n})\r\n\r\nexport default connect(mapStateToProps, { \r\n  increaseMoveCount, alterMatchedPairCount, setWait, broadcastWinning,\r\n  setWinningInfo, toggleShiftMode, increaseUnsuccessfulMoveCount, resetUnsuccessfulMoveCount\r\n})(CardPiece);","import React from 'react';\r\nimport CardPiece from '../card-piece/card-piece'\r\nimport './card-grid-slot.scss';\r\n\r\nexport default class CardGridSlot extends React.Component {\r\n\r\n  createCardPiece() {\r\n    const id = this.props.pieceId;\r\n    const name = this.props.name;\r\n    if (id !== null) {      \r\n      return <CardPiece key={id} id={id} name={name}/>\r\n    }    \r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div id={`slot-${this.props.id}`} className=\"card-grid__slot\">\r\n        {this.createCardPiece()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './counter.scss';\r\n\r\nexport default class Counter extends React.Component {\r\n  _isMounted = false;\r\n  _stopSubscribe = false;\r\n  subscribeCount = () => {    \r\n    this.props.updateCount((count) => {               \r\n      if (!this._stopSubscribe && count !== this.state.count) {\r\n        this.setState(state => state.count = count)        \r\n      }                    \r\n    })\r\n  }\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      subscribeTimer: 0,\r\n      count: props.count      \r\n    }\r\n    this.startSubscribe.bind(this)    \r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    if (this._isMounted) {\r\n      this.startSubscribe();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n    this._stopSubscribe = true;        \r\n  }\r\n\r\n  startSubscribe() {    \r\n    setInterval(() => this.setState({\r\n      subscribeTimer: this.state.subscribeTimer + 1\r\n    }), 50);\r\n  }\r\n\r\n  render() {    \r\n    if (!this._stopSubscribe) {\r\n      setTimeout(() => this.subscribeCount(), 0)    \r\n    }\r\n                 \r\n    return (     \r\n      <div className={`component-wrapper ${this.props.className}`}>\r\n        <p>{this.props.label}: {this.state.count}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const CardGridService = () => {\r\n  return {    \r\n    getRandomPieceName,    \r\n  }\r\n};\r\n\r\nconst getRandomPieceName = (pieceNames) => {       \r\n  const splicePos = Math.floor(Math.random()*100 % pieceNames.length)\r\n  const pieceId = pieceNames.splice(splicePos, 1)\r\n  return pieceId[0]; \r\n}\r\n\r\nexport default CardGridService;","import React from 'react';\r\nimport './card-grid.scss';\r\nimport CardGridSlot from '../card-grid-slot/card-grid-slot';\r\nimport Counter from '../counter/counter'\r\nimport Timer from 'components/timer/timer';\r\nimport constants from 'shared/constants';\r\nimport * as _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { broadcastWinning, restartGame, setWinningInfo } from 'actions/card-action';\r\nimport GridService from 'services/grid.service';\r\nimport CardGridService from 'services/card-grid.service';\r\n\r\nconst gridService = GridService();\r\nconst cardGridService = CardGridService();\r\n\r\nconst gridSlotSize = (gridSize) => {\r\n  let width = 160;\r\n  let height = 160;\r\n  if (gridSize.width > 3 || gridSize.height > 3) {\r\n    if (window.innerWidth <= 540) {\r\n      width = 70;\r\n      height = 70;\r\n    } else {\r\n      width = 120;\r\n      height = 120;\r\n    }    \r\n  }\r\n  return {\r\n    width,\r\n    height\r\n  }  \r\n}\r\n\r\nconst gap = 10;\r\nconst HorizontalGaps = constants.GRID_SIZE_LV2.width * gap;\r\nconst VerticalGaps = constants.GRID_SIZE_LV2.height * gap;\r\n\r\nconst gridStyle = { \r\n  width: `${constants.GRID_SIZE_LV2.width * gridSlotSize(constants.GRID_SIZE_LV2).width + HorizontalGaps}px`,\r\n  height: `${constants.GRID_SIZE_LV2.height * gridSlotSize(constants.GRID_SIZE_LV2).height + VerticalGaps}px`,  \r\n  gridTemplateColumns: `repeat(${constants.GRID_SIZE_LV2.width}, ${gridSlotSize(constants.GRID_SIZE_LV2).width}px)`,\r\n  gridTemplateRows: `repeat(${constants.GRID_SIZE_LV2.height}, ${gridSlotSize(constants.GRID_SIZE_LV2).height}px)`,\r\n  gridGap: `${gap}px`,\r\n  border: `1px solid wheat`,  \r\n}\r\n\r\nclass CardGrid extends React.Component {\r\n  emptySlotBg = 'rgba(255, 255, 255, 0.3)';\r\n  slotBg = 'rgba(255, 255, 255, 1)';\r\n  hoveredSlotBg = 'rgba(255, 255, 255, .6)';\r\n  _isMounted = false;\r\n  isWin = false; \r\n  subscribeWinning = (callback) => {\r\n    this.isWin = this.props.isWin;      \r\n    callback(this.isWin);\r\n  }\r\n  getEmittedTime = (emittedTime) => {\r\n    console.log('get time');     \r\n    const winningInfo = {\r\n      playedTime: emittedTime,\r\n      playerName: 'Unknown player',\r\n      level: this.props.gameLevel.level\r\n    }\r\n    this.props.setWinningInfo(winningInfo)\r\n  }  \r\n\r\n  constructor(props) {\r\n    super(props);    \r\n    this.getMoveCount = this.getMoveCount.bind(this);\r\n    this.getMatchedPairs = this.getMatchedPairs.bind(this);\r\n    this.gameSettings = {\r\n      emptySlotQuantity: props.gameLevel.emptySlotQuantity,\r\n      arraySize: props.gameLevel.arraySize\r\n    }   \r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (nextProps.isUpdated) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  componentDidMount() {    \r\n    \r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.restartGame();\r\n  }\r\n\r\n  createGridSlots() {\r\n    const slots = [];\r\n    const gridSize = constants.GRID_SIZE_LV2.height * constants.GRID_SIZE_LV2.width;    \r\n    const pieceIdSet = gridService.getPieceIdSet(gridSize);\r\n    const pieceNames = ['A', 'A', 'B', 'B', 'C', 'C', 'D', 'D', 'E', 'E', 'F', 'F', 'G', 'G', 'H', 'H']    \r\n    for (let i = 0; i < gridSize; i++) {\r\n      const name = cardGridService.getRandomPieceName(pieceNames);\r\n      let pieceId = gridService.getRandomPieceId(pieceIdSet);          \r\n      slots.push(<CardGridSlot id={i} key={i} pieceId={pieceId} name={name}/>)\r\n    }\r\n    return slots;\r\n  } \r\n\r\n  getMoveCount(callback) {                   \r\n    callback(this.props.moveCount)\r\n  } \r\n  \r\n  getMatchedPairs(callback) {                   \r\n    callback(this.props.matchedPairs)\r\n  }\r\n  \r\n  render() {    \r\n    const gridSlots = this.createGridSlots(this.gameSettings.emptySlotQuantity);    \r\n    return (\r\n      <div className=\"component-wrapper card-wrapper\">\r\n        <div className=\"card-grid\" style={gridStyle}>\r\n          {gridSlots.map(item => item)}\r\n        </div>\r\n        {/* <Timer className={'timer-pos'} \r\n          stop={this.isWin} \r\n          updateStop={this.subscribeWinning} \r\n          emitTime={this.getEmittedTime}\r\n        /> */}\r\n        <Counter className={'text-pos'} \r\n          label=\"Moves\"\r\n          updateCount={this.getMoveCount} \r\n          count={this.props.moveCount}/>\r\n        <Counter className={'text-pos-2'} \r\n          label=\"Matches\"\r\n          updateCount={this.getMatchedPairs} \r\n          count={this.props.matchedPairs}/> \r\n      </div>\r\n    );\r\n  }  \r\n}\r\n\r\nCardGrid.propsType = {\r\n  broadcastWinning: PropTypes.func.isRequired,\r\n  restartGame: PropTypes.func.isRequired,\r\n  setWinningInfo: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isUpdated: false,\r\n  isWin: state.card.isWin,\r\n  gameLevel: state.card.gameLevel,\r\n  moveCount: state.card.moveCount,\r\n  matchedPairs: state.card.matchedPairs\r\n})\r\n\r\nexport default connect(mapStateToProps, { broadcastWinning, restartGame, setWinningInfo: setWinningInfo })(CardGrid);","import React from 'react';\r\nimport './card-menu.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default class CardMenu extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"component-wrapper\">\r\n        <ul className=\"card-menu\">\r\n          <li>\r\n            <Link to=\"/card/game\">Start Game</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/card/score-board\">Score Board</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/card/setting\">Setting</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './card-setting.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { changeGameLevel } from 'actions/card-action';\r\n\r\nclass CardSetting extends React.Component {  \r\n  change = (event) => {    \r\n    this.props.changeGameLevel(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"component-wrapper\">        \r\n        <ul className=\"card-setting\">\r\n          <div className=\"setting-option-wrapper\">\r\n            <label htmlFor=\"level\" style={{marginRight: '10px'}}>Game Level:</label>\r\n            <select name=\"level\" id=\"level\" onChange={this.change} value={this.props.level}>              \r\n              <option value=\"Normal\">Normal</option>\r\n              <option value=\"Hard\">Hard</option>\r\n              <option value=\"Nightmare\">Nightmare</option>\r\n            </select> \r\n          </div>\r\n                   \r\n          <li>\r\n            <Link to=\"/card\">Back</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCardSetting.propsType = {  \r\n  changeGameLevel: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isUpdated: false,\r\n  level: state.card.gameLevel.level\r\n})\r\n\r\nexport default connect(mapStateToProps, { changeGameLevel })(CardSetting);\r\n","import React from 'react';\r\nimport './card-score-board.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport cardService from 'services/card.service';\r\nimport { fetchScores } \r\n  from 'actions/card-action'\r\n\r\nclass CardScoreBoard extends React.Component { \r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      winningInfo: {}\r\n    };\r\n    this.getWinningInfo = this.getWinningInfo.bind(this);    \r\n  }\r\n\r\n  componentWillMount() {       \r\n    this.getWinningInfo();\r\n  }\r\n  \r\n  getWinningInfo() {      \r\n    // cardService.getWinningInfo().then(res => {\r\n    //   const sortedWinningInfo = res.data.sort((info1, info2) => {\r\n    //     return info1.winningInfo.moves - info2.winningInfo.moves;\r\n    //   })\r\n    //   this.setState({\r\n    //     winningInfo: sortedWinningInfo\r\n    //   })\r\n    // })    \r\n    this.props.fetchScores();    \r\n  }\r\n  \r\n  render() {       \r\n    const sortedWinningInfo = this.props.winningInfo; \r\n    let scores = null;       \r\n    if (sortedWinningInfo.length > 0) {\r\n      scores = sortedWinningInfo.map((data) => {\r\n        const index = sortedWinningInfo.indexOf(data)\r\n        const info = data.winningInfo\r\n        return(\r\n          <p key={index}>{index+1}. {info.playerName}: {+info.moves} moves ({info.level})</p>\r\n        ) \r\n      })\r\n    }     \r\n    return (\r\n      <div className=\"component-wrapper\">        \r\n        <ul className=\"card-menu\"> \r\n          {scores}\r\n          <li>\r\n            <Link to=\"/card\">Back</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );    \r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isUpdated: false,\r\n  winningInfo: state.card.winningInfo\r\n})\r\n\r\nexport default connect(mapStateToProps, {fetchScores})(CardScoreBoard);\r\n","import React from 'react';\r\nimport './card-page.scss';\r\nimport CardGrid from './card-grid/card-grid';\r\nimport CardMenu from './card-menu/card-menu';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport CardSetting from './card-setting/card-setting';\r\nimport cardScoreBoard from './card-score-board/card-score-board';\r\n\r\nexport default class CardPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"component-wrapper\">\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <Switch>\r\n              <Route path=\"/card\" exact component={CardMenu} />\r\n              <Route path=\"/card/game\" exact component={CardGrid} />\r\n              <Route path=\"/card/setting\" exact component={CardSetting} />\r\n              <Route path=\"/card/score-board\" exact component={cardScoreBoard} />\r\n            </Switch>\r\n          </header>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport CardPage from 'pages/card-page/card-page';\r\n\r\nconst CardPageRoute = () => {\r\n  return (\r\n    <Route path=\"/card\" component={CardPage} />\r\n  )\r\n}\r\n\r\nexport default CardPageRoute;","export function changeStyle(currentStyle) {  \r\n  return function(dispatch) {        \r\n    dispatch({\r\n      type: 'changeStyle',\r\n      componentStyle: currentStyle,      \r\n    })\r\n  }\r\n} \r\n\r\nexport function changeHtml(html) {\r\n  return function(dispatch) {        \r\n    dispatch({\r\n      type: 'changeHtml',\r\n      componentHtml: html,      \r\n    })\r\n  }\r\n}\r\n\r\nexport function exportCode(currentStyle, html) {   \r\n  return function(dispatch) {        \r\n    dispatch({\r\n      type: 'exportCode',\r\n      code: {\r\n        html,\r\n        css: convertStyleToCss(currentStyle)\r\n      }\r\n    })\r\n  }\r\n} \r\n\r\nexport function addOption(option, currentOptions) {  \r\n  return function(dispatch) { \r\n    dispatch({\r\n      type: 'addOption',\r\n      options: [...currentOptions, option]  \r\n    })\r\n  }\r\n}\r\n\r\nconst convertStyleToCss = (style) => {\r\n  const className = '.component-class ';\r\n  let css = `{`; \r\n  for (const key in style) {\r\n    css = css + '\\n  ' + key + ': ' + style[key] + ';';    \r\n  }\r\n  css = css + '\\n}'\r\n  return className + css;\r\n}","import React from 'react';\r\nimport './setting-area.scss';\r\nimport { changeStyle, exportCode, addOption } from 'actions/component-generator-action';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash'; \r\nclass SettingArea extends React.Component {  \r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.changeStyle.bind(this);\r\n    this.exportCode = this.exportCode.bind(this);\r\n    this.addOption = this.addOption.bind(this);\r\n    this.changeStyle = this.changeStyle.bind(this);\r\n  }\r\n\r\n  event = null;\r\n  style = {}\r\n  \r\n\r\n  changeStyleDebounce = _.debounce(() => {     \r\n    const attr = this.event.target.id;\r\n    const value = this.event.target.value;\r\n    if (value) {      \r\n      this.style = Object.assign({}, this.style, {[attr]: value});   \r\n      this.props.changeStyle(this.style);\r\n    } \r\n  }, 500); \r\n\r\n  changeStyle(event){\r\n    event.persist();  \r\n    this.event = event;     \r\n    this.changeStyleDebounce();\r\n  } \r\n\r\n  exportCode(event) {\r\n    this.props.exportCode(this.props.componentStyle, this.props.componentHtml);\r\n  }\r\n\r\n  addOption(event) {\r\n    if (event.keyCode === 13) {\r\n      const option = event.target.value;\r\n      if (!this.props.options.includes(option)) {\r\n        this.props.addOption(option, this.props.options);\r\n      }     \r\n    }    \r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.options);\r\n       \r\n    return (          \r\n      <div className=\"setting-area\">\r\n        <h1>setting-area</h1>       \r\n        <form onSubmit={this.exportCode}>          \r\n          {this.props.options.map(option => {\r\n            return(\r\n              <div className=\"mt-10 setting-wrapper\" key={option}>             \r\n                <label htmlFor={option} className=\"mr-10\">{option}</label>        \r\n                <input id={option} type=\"text\" placeholder={option} onChange={this.changeStyle}/>          \r\n              </div>\r\n            )\r\n          })} \r\n          <div className=\"mt-10 setting-wrapper\">             \r\n            <label htmlFor=\"add-option\" className=\"mr-10\">add option</label>        \r\n            <input id=\"add-option\" type=\"text\" placeholder=\"add-option\" onKeyUp={this.addOption}/>          \r\n          </div>\r\n          <div className=\"mt-10\">\r\n            <button type=\"submit\">Export code</button> \r\n          </div>     \r\n        </form>\r\n      </div>  \r\n    );\r\n  }  \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  componentStyle: state.componentGenerator.componentStyle,\r\n  componentHtml: state.componentGenerator.componentHtml,\r\n  label: state.componentGenerator.label,\r\n  options: state.componentGenerator.options\r\n})\r\n\r\nexport default connect(mapStateToProps, {changeStyle, exportCode, addOption})(SettingArea);\r\n\r\n","import React from 'react';\r\nimport './button.scss';\r\n\r\n\r\nexport default class Button extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);    \r\n    this.setHtml = this.setHtml.bind(this);\r\n  }\r\n\r\n  html = '';\r\n\r\n  setHtml(html) {\r\n    this.props.getHtml(html)\r\n  }\r\n\r\n  render() {   \r\n    return (      \r\n      <button className=\"component-class\" style={this.props.style}>{this.props.label}</button>  \r\n    );\r\n  }  \r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport './display-area.scss';\r\nimport { connect } from 'react-redux';\r\nimport { changeHtml } from 'actions/component-generator-action';\r\nimport Button from '../components/button/button';\r\n\r\nexport class DisplayArea extends React.Component {  \r\n  constructor(props) {\r\n    super(props);\r\n    this.html = `<button class=\"component-class\">${this.props.label}</button>`\r\n    this.setHtml = this.setHtml.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.changeHtml(this.html)\r\n  }\r\n\r\n  setHtml(html) {\r\n    \r\n  }\r\n\r\n  \r\n\r\n  render() {  \r\n    \r\n    return (      \r\n      <div className=\"display-area\">\r\n        <div>\r\n          <h1>display-area</h1>\r\n        </div>        \r\n        <div style={{display: \"inline\"}}>\r\n          <Button style={this.props.componentStyle} label={this.props.label} setHtml={this.setHtml} />\r\n        </div>        \r\n      </div>  \r\n    );\r\n  }  \r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  componentStyle: state.componentGenerator.componentStyle,\r\n  label: state.componentGenerator.label  \r\n})\r\n\r\nexport default connect(mapStateToProps, {changeHtml})(DisplayArea);\r\n","import React from 'react';\r\nimport './code-area.scss';\r\nimport { connect } from 'react-redux';\r\n\r\nclass CodeArea extends React.Component {  \r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    console.log(event.target.value);    \r\n  }\r\n\r\n  render() {       \r\n    return (\r\n      <div className=\"code-area\">\r\n        <div style={{width: \"100%\"}}>\r\n          <h1 className=\"text-center\">code-area</h1>\r\n        </div>        \r\n        <div>\r\n          <h3 style={{marginTop: \"0px\"}}>Html</h3>\r\n          <textarea name=\"html\" id=\"css\" cols=\"30\" rows=\"12\" value={this.props.code.html} onChange={this.handleChange}></textarea>\r\n        </div>\r\n        <div style={{marginBottom: \"20px\"}}>\r\n          <h3>Css</h3>\r\n          <textarea name=\"css\" id=\"css\" cols=\"30\" rows=\"12\" value={this.props.code.css} onChange={this.handleChange}></textarea>\r\n        </div>\r\n      </div> \r\n    );\r\n  }  \r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  code: state.componentGenerator.code  \r\n})\r\n\r\nexport default connect(mapStateToProps)(CodeArea);","import React from 'react';\r\nimport './component-generator-page.scss';\r\nimport SettingArea from './setting-area/setting-area';\r\nimport DisplayArea from './display-area/display-area';\r\nimport CodeArea from './code-area/code-area';\r\n\r\nexport default class ComponentGeneratorPage extends React.Component {  \r\n  render() {   \r\n    return (      \r\n      <div className=\"page-wrapper\">\r\n        <SettingArea />\r\n        <DisplayArea />\r\n        <CodeArea />\r\n      </div>      \r\n    );\r\n  }  \r\n}\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport ComponentGeneratorPage from 'pages/component-generator-page/component-generator-page';\r\n\r\nconst ComponentGeneratorPageRoute = () => {\r\n  return (\r\n    <Route path=\"/component-generator\" component={ComponentGeneratorPage} />\r\n  )\r\n}\r\n\r\nexport default ComponentGeneratorPageRoute;","import React from 'react';\r\nimport { requireLogin } from 'router/guards';\r\nimport { GuardProvider } from 'react-router-guards';\r\nimport history from 'services/history.service';\r\nimport { Switch } from 'react-router-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport Nav from 'components/nav/nav';\r\nimport PuzzlePageRoute from 'pages/puzzle-page/puzzle-page-route'\r\nimport HomePageRoute from 'pages/home-page/home-page-route'\r\nimport ClockPageRoute from 'pages/clock-page/clock-page-route'\r\nimport LoginPageRoute from 'pages/login-page/login-page-route';\r\nimport CardPageRoute from 'pages/card-page/card-page-route';\r\nimport ComponentGeneratorPageRoute from 'pages/component-generator-page/component-generator-page-route';\r\n\r\nconst GLOBAL_GUARDS = [requireLogin];\r\nconst MainRouter = () => {\r\n  return (\r\n    <HashRouter history={history}>\r\n      <Nav />\r\n      <GuardProvider guards={GLOBAL_GUARDS} loading=\"Loading...\" >\r\n        <Switch>\r\n          {HomePageRoute()}\r\n          {ClockPageRoute()}\r\n          {PuzzlePageRoute()}\r\n          {CardPageRoute()}\r\n          {LoginPageRoute()}\r\n          {LoginPageRoute()}\r\n          {ComponentGeneratorPageRoute()}\r\n        </Switch>\r\n      </GuardProvider>          \r\n    </HashRouter>\r\n  )\r\n}\r\n\r\nexport default MainRouter;","import {LOGIN, LOGOUT} from 'actions/type';\r\nimport { getIsLoggedIn } from 'utils';\r\n\r\nconst initialState = {\r\n  isLoggedIn: getIsLoggedIn()\r\n}\r\n\r\nexport default function(state = initialState, action) {  \r\n  switch (action.type) {\r\n    case LOGIN:      \r\n      return {\r\n        ...state,\r\n        isLoggedIn: action.isLoggedIn\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: action.isLoggedIn\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","const initialState = {\r\n  isWin: false,\r\n  gameLevel: {\r\n    level: 'Normal',\r\n    emptySlotQuantity: 2,\r\n    arraySize: 3\r\n  },\r\n  winningInfo: []\r\n}\r\n\r\nconst changeLevel = (level) => {\r\n  switch (level) {\r\n    case 'Easy':\r\n      return {\r\n        level,\r\n        emptySlotQuantity: 3,\r\n        arraySize: 3\r\n      }\r\n    case 'Normal':\r\n      return {\r\n        level,\r\n        emptySlotQuantity: 2,\r\n        arraySize: 3\r\n      }\r\n    case 'Hard':\r\n      return {\r\n        level,\r\n        emptySlotQuantity: 1,\r\n        arraySize: 3\r\n      }\r\n    default:\r\n      return {\r\n        level: 2,\r\n        emptySlotQuantity: 2,\r\n        arraySize: 3\r\n      }\r\n  }\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'broadcastWinning':\r\n      return {\r\n        ...state,\r\n        isWin: action.isWin\r\n      };\r\n    case 'changeGameLevel':\r\n      return {\r\n        ...state,\r\n        gameLevel: changeLevel(action.level)\r\n      };\r\n    case 'setWinningInfo':\r\n      console.log(state.winningInfo);\r\n      console.log(action.winningInfo);\r\n      return {\r\n        ...state,\r\n        winningInfo: [...state.winningInfo, action.winningInfo]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","const initialState = {\r\n  moveCount: 0,\r\n  matchedPairs: 0,\r\n  isWaiting: false,\r\n  isWin: false,\r\n  gameLevel: {\r\n    level: 'Hard',\r\n    arraySize: 4,\r\n    shiftCase: getRandomInt(2)\r\n  },\r\n  winningInfo: []\r\n}\r\n\r\nfunction changeLevel(level) {\r\n  switch (level) {\r\n    case 'Normal':\r\n      return {\r\n        level,\r\n        arraySize: 4\r\n      }\r\n    case 'Hard':\r\n      return {\r\n        level,\r\n        arraySize: 4,\r\n        shiftCase: getRandomInt(2),        \r\n      }\r\n    case 'Nightmare':\r\n      return {\r\n        level,\r\n        arraySize: 4,\r\n        toggle: false,\r\n        unsuccessfulMoves: 0\r\n      }\r\n    default:\r\n      return {\r\n        level: 'Normal',\r\n        arraySize: 4\r\n      }\r\n  }\r\n}\r\n\r\nfunction getRandomInt(max) {\r\n  const result = Math.floor(Math.random() * Math.floor(max)) + 1;\r\n  return result;\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'broadcastWinning':\r\n      return {\r\n        ...state,\r\n        isWin: action.isWin\r\n      };\r\n    case 'changeGameLevel':\r\n      return {\r\n        ...state,\r\n        gameLevel: changeLevel(action.level)\r\n      };\r\n    case 'setWinningInfo':\r\n      return {\r\n        ...state,\r\n        winningInfo: [...state.winningInfo, action.winningInfo]\r\n      };\r\n    case 'increaseMoveCount':\r\n      return {\r\n        ...state,\r\n        moveCount: action.moveCount\r\n      };\r\n    case 'setWait':\r\n      return {\r\n        ...state,\r\n        isWaiting: action.isWaiting\r\n      };\r\n    case 'alterMatchedPairCount':\r\n      console.log('pair count');\r\n      \r\n      return {\r\n        ...state,\r\n        matchedPairs: action.matchedPairs\r\n      };\r\n    case 'restartGame':\r\n      return {\r\n        ...state,\r\n        isWin: action.isWin,\r\n        moveCount: action.moveCount,\r\n        matchedPairs: action.matchedPairs,\r\n      };\r\n    case 'saveScores':\r\n      return {\r\n        ...state,\r\n        winningInfo: action.winningInfo\r\n      };\r\n    case 'toggleShiftMode':\r\n      return {\r\n        ...state,\r\n        gameLevel: {\r\n          level: state.gameLevel.level,\r\n          arraySize: state.gameLevel.arraySize,\r\n          toggle: action.toggle,\r\n          unsuccessfulMoves: state.gameLevel.unsuccessfulMoves\r\n        }\r\n      };\r\n    case 'alterUnsuccessfulMoveCount':\r\n      return {\r\n        ...state,\r\n        gameLevel: {\r\n          level: state.gameLevel.level,\r\n          arraySize: state.gameLevel.arraySize,\r\n          toggle: state.gameLevel.toggle,\r\n          unsuccessfulMoves: action.unsuccessfulMoves\r\n        }\r\n      };    \r\n    default:\r\n      return state;\r\n  }\r\n};","import { availableComponents } from 'pages/component-generator-page/constants';\r\n\r\nconst initialState = {\r\n  label: 'component A',\r\n  options: ['height', 'width', 'border', 'border-radius', 'background'],\r\n  components: availableComponents,\r\n  componentStyle: {\r\n    width: 'auto',\r\n    height: 'auto'   \r\n  },  \r\n  componentHtml: '',\r\n  code: {\r\n    html: '',\r\n    css: ''\r\n  },\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"changeStyle\":      \r\n      return {\r\n        ...state,\r\n        componentStyle: action.componentStyle\r\n      }\r\n    case \"changeHtml\":      \r\n      return {\r\n        ...state,\r\n        componentHtml: action.componentHtml\r\n      }\r\n    case \"exportCode\":          \r\n      return {\r\n        ...state,\r\n        code: action.code,\r\n        isCodeExporting: action.isCodeExporting\r\n      }    \r\n    case \"addOption\":     \r\n      return {\r\n        ...state,\r\n        options: action.options\r\n      }    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","export const availableComponents = [\r\n  'button', 'form', 'header'\r\n]","import { combineReducers } from 'redux';\r\nimport authReducer from './auth-reducer'\r\nimport puzzleReducer from './puzzle-reducer'\r\nimport cardReducer from './card-reducer';\r\nimport componentGeneratorReducer from './component-generator-reducer';\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  puzzle: puzzleReducer,\r\n  card: cardReducer,\r\n  componentGenerator: componentGeneratorReducer\r\n})","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from 'reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst reduxDevTools = process.env.NODE_ENV === 'prod' ? null :\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\nconst store = createStore(\r\n  rootReducer, \r\n  initialState, \r\n  compose(\r\n    applyMiddleware(...middleware)\r\n  )\r\n);\r\n\r\n// const storeDev = createStore(\r\n//   rootReducer, \r\n//   initialState, \r\n//   compose(    \r\n//     applyMiddleware(...middleware),\r\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n//   )\r\n// );\r\n\r\n/* Use when no redux dev tools */\r\nexport default store;\r\n\r\n/* Use when dev with redux dev tools */\r\n// export default storeDev;","import React from 'react';\r\nimport './App.scss';\r\nimport { Provider} from 'react-redux';\r\nimport { MainRouter } from 'router';\r\nimport store from 'store/store';\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"component-wrapper\">\r\n        <Provider store={store}>          \r\n          <MainRouter />\r\n        </Provider>        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}